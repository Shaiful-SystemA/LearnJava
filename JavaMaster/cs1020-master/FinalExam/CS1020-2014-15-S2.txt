CS1020 2014/15 S2
=================
1. Ans: A

2. (i): [[1,2,3], [4,5,6]]
   (ii): [[1,2,3], [1,2,3,4,5,6]]
   (iii): [[1,2,3], [4,5,6]]
   Ans: E

3. (a+b*(c-d)-e)
   (a+b*(cd-)-e)
   (a+(bcd-*)-e)
   ((abcd-*+)-e)
   (abcd-*+e-)
   Ans: D

4. A: push then immediately pop
   B: push all then pop all
   C: read and print 1,4, 5, push 2, 3 into stack. pop stack, it gives 3,2 (wrong seq)
   D: read and print 1,3, push 2, 4, 5 into stack, pop stack
   Ans: C

5. Ans: E, a[i] is replaced by maxvalue? should have temporary var to store the data.

6. 
	n	| 	0	|	1	|	2	|	3	|
	f(n)|	1	|	5	|	13	|	29	|

	Ans:B

7. need to show logn <= c*n^0.01

(logn)/c <= n^0.01

log( n^(1/c)) <= n^0.01

but log (n^(1/c)) <= log n

so log n = O(n^0.01)


8.

public static void printCircularLinkedList(ListNode<E> head{

	ListNode<E> curr = head;
	while(curr.getNext() != head){
		System.out.println(curr);
		curr = curr.getNext();
	}
}

9. done see the ReverseLinkedList.java
10. Use HashMap. see PrintOrder.java

11. see PrintOrder.java

12. distance between two centers < (circle radius - hole radius)
	largest diff = max - min O(n)
	smallest diff is the diff value between two consecutive element in a sorted list.

	Sorting O(nlogn) + compute diff between adjacent pairs O(n)

13. FUCK THIS
